" Set 'nocompatible' to ward off unexpected things that your disto might
" have madem as well as sanely reset options when re-sourcing .vimrc
 set nocompatible 

" Enable syntax highlighting
syntax on

" Better command-line completion
set wildmenu

" Stop certain movements from always going to the first character of a line.
set nostartofline

" Always display the status line, even if only one window is diplayed
set laststatus=2

" Instead of failing a command because of unsaved changes, instead raise a 
" dialogue asking if you wish to save changed files.
set confirm

" Use visual bell instead of beeping when doing something wrong 
" set visualbell

" And reset the terminal code for the visual bell. If visualbell is set, and 
" This line is also included, vim will neither flash nor beep. If visualbell 
" is unset, this does nothing.
" set t_vb=

" Use of the mouse for all mode
" set mouse=a

" Quickly time out on keycode, but never time out on mappings
" set notimeout ttimeout ttimeoutlen=200

" Use <F11> to toggle between 'paste' and 'nopaste'
set pastetoggle=<F11>

" Map <C-L> (redraw screen) to also turn off search highlingting until the 
" next search 
nnoremap <C-l> :nohl<CR><C-L>

"set expandtab "expand tabs
set tabstop=4 "
set softtabstop=4
set shiftwidth=4

colorscheme zellner 
set hlsearch " turn on search pattern highlighting
set ignorecase " ignore case when searching...
set smartcase " ... unless pattern has uppercase character
set incsearch " enable incremental matches
"set list " display tabs and line endings
set lcs=trail:-,tab:-- " change the way tabs and line ends are displayed
set number		"show line numbers
set backspace=2 "allow backspace to delete characters

"wrapping settings
"set wrap
"set linebreak
"set nolist
set textwidth=132
"set fo+=t

"filetype plugin on
" Attempt to determine the type of a file based on its name and possibly its
" contents. Use this to allow intelligent auto-indenting for each filestype,
" and for plugins that are filetype specific
filetype indent plugin on

" When opening a new line and no filetype-specific indenting is enabled, keep
" the same indent as the line you're currently on. Useful for READMEs, etc.
set autoindent

"set tags=/Users/kthirukonda/Work/repos/pim/services/pimcore/tags
"set tags=./tags;

"simulate pressing ,ms on vim startup. This is my shortut for highlighting
"marks
call feedkeys(",ms")

if &diff
    colorscheme pablo 
endif

au BufRead,BufNewFile *.logcat set filetype=logcat

set autochdir

"Settings for TagList plugin
"let Tlist_Use_Right_Window = 1
let Tlist_Auto_Open = 1
let Tlist_WinWidth = 50 
let Tlist_Exit_OnlyWindow = 1

"show full path name of the file in the status bar
set statusline+=%<%F\ %h%m%r%=%-14.(%l,%c%V%)\ %P

"++++++++++++ MACROS +++++++++++++++++++++++++++++++++++++++++++++++
"Remove whitespaces at the end of the line
let @a=':%s/\s\+$//'

function! LoadCscope()
  let db = findfile("cscope.out", ".;")
  if (!empty(db))
    let path = strpart(db, 0, match(db, "/cscope.out$"))
    set nocscopeverbose " suppress 'duplicate connection' error
    exe "cs add " . db . " " . path
    set cscopeverbose
  endif
endfunction
au BufEnter /* call LoadCscope()

" Vim to run patogen
execute pathogen#infect()

" syntax error highlight
" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
" let g:syntastic_check_on_open = 1
" let g:syntastic_check_on_wq = 0

